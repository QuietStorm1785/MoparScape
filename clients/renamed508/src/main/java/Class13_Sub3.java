/* Class13_Sub3 - Decompiled by JODE
 * Visit http://jode.sourceforge.net/
 */

final class Class13_Sub3 extends Class13
{
    static int anInt2661;
    private final int anInt2662;
    static int anInt2663;
    static NodeSubList aClass128_2664;
    private final int anInt2665;
    private final int anInt2666;
    static int anInt2667;
    static int anInt2668;
    static int anInt2669;
    static int appletWidth;
    private final int anInt2671;
    static int anInt2672;
    static Class21 aClass21_2673;
    static int[] anIntArray2674;
    static int anInt2675;
    static short[][] aShortArrayArray2676 = {
            { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 119, 92, 66, 39, 20, 4, 955, 1845, 4032, 7101, 10178, 14272, 17341, 21433,
                    27581, 30651, -31811, -27717, -24640, -21581, -17603, -13383, 794, 5020, 7062, 1160, 15128, 17940, 30614, -30952, -26728, -23662, -18536, -14440, -9324, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 955, 1845, 4032, 7101, 10178, 14272, 17341, 21433, 27581, 30651, -31811, -27717, -24640, -21581, -17603, -13383, 794, 5020, 7062, 1160, 15128, 17940, 30614, -30952, -26728, -23662, -18536, -14440, -9324, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 955, 1845, 4032, 7101, 10178, 14272, 17341, 21433, 27581, 30651, -31811, -27717, -24640, -21581, -17603, -13383, 794, 5020, 7062, 1160, 15128, 17940, 30614, -30952, -26728, -23662, -18536, -14440, -9324, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 22461, -21571, 11200, 957, -10317, 5056, -31808, 123, 22453, -21579, 11191,
                    949, -10325, 4023, -31817, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670,
                    13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 10347, 10582, 10429, 10407, 10359, 8414, 9540, 10456, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888,
                    8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196,
                    30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916,
                    -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866 },
            { 4300, 3294, 3303, 3264, 4506, 4382, 4387, 5293, 7622, 7384, 8412, 7496, 86, 123, 111, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026,
                    -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502,
                    4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 13766, 13745, 13726, 13890, 13743, 13852, 17602, 18605, 21660, 24000, 24997, 24088, 27972, 25903, 26904, 27193, 27175, 27156, 30020, 28975, 29976, 12482, 13485, 10392, 10692, 10669, 10776, 6717, 6695, 7830, 6971, 6951, 5910, 3389, 3369, 3356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 18322, 17304, 16289, 15929, 6569, 7613, 7630, 6364, 7054, 7079, 5056, 6988, 8481, 7475, 7364, 8412, -21990, -21969, -21952, -22182, -27211, -27198, -27186, -27302, 542, 555, 941, 951, 8076, 6936, 5675, 5440, 10014, 11179, 11197, 11096, 10258, 10776, 10661, 10419, -10984, -11095, -11072, -6630, -5467, -6473, -6838, -32318, -26069, -25925, -25669, 11202, 22193, 123, 111, 99, 4, 12, 24, 37, 49, 61, 74, 86, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888,
                    8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196,
                    30402, 30379, 29458, -31168, -32217, -32238, -25916, -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866, 119, 92, 66, 39, 20, 4, 823, 809, 796, 2749, 2733, 2712, 4934, 4911, 4888, 8004, 8099, 11078, 11053, 10008, 18231, 18339, 18196, 30402, 30379, 29458, -31168, -32217, -32238, -25916,
                    -25933, -25956, -21824, -22869, -21864, -17980, -18005, -18026, -11838, -11861, -10858, 23318, 21910, 21776, 1502, 4570, 8670, 13788, 25827, 31969, -28196, -21028, -15908, -7466, 7977, 8732, 8596, 4894, 5908, 794, 1686, -22623, -23014, 14866 } };
    static int allocatedTinyBufferCount;

    public static void method259(int i)
    {
        aClass21_2673 = null;
        aShortArrayArray2676 = null;
        aClass128_2664 = null;
        anIntArray2674 = null;
        if (i != 0)
            appletWidth = -34;
    }

    static final void method260(Class21 class21, int i)
    {
        try
        {
            if (i != 11053)
                method260(null, 57);
            Class28.aClass21_528 = class21;
            anInt2667++;
        } catch (RuntimeException runtimeexception)
        {
            throw Class107.getException(runtimeexception, "l.J(" + (class21 != null ? "{...}" : "null") + ',' + i + ')');
        }
    }

    final void method244(int i, int i_0_, int i_1_)
    {
        anInt2661++;
        int i_2_ = i_1_ * anInt2671 >> 12;
        int i_3_ = -35 % ((-49 - i_0_) / 43);
        int i_4_ = i * anInt2662 >> 12;
        int i_5_ = i_1_ * anInt2666 >> 12;
        int i_6_ = anInt2665 * i >> 12;
        Class84.method1484(i_4_, ((Class13) this).anInt216, i_2_, (byte) 121, i_5_, i_6_);
    }

    static final void method261(int i, int i_7_, int i_8_)
    {
        anInt2668++;
        Class48 class48 = Class68_Sub13_Sub11.method752((byte) 81, i_8_);
        int i_9_ = ((Class48) class48).anInt945;
        int i_10_ = ((Class48) class48).anInt956;
        int i_11_ = ((Class48) class48).anInt958;
        int i_12_ = NodeList.anIntArray259[i_10_ - i_11_];
        if (i > i_7_ || i_12_ < i_7_)
            i_7_ = 0;
        i_12_ <<= i_11_;
        Class66.method638(i ^ 0x41, (Class3.anIntArray79[i_9_] & (i_12_ ^ 0xffffffff) | i_12_ & i_7_ << i_11_), i_9_);
    }

    static final Class68_Sub20_Sub12 method262(int i, int i_13_)
    {
        Class68_Sub20_Sub12 class68_sub20_sub12 = ((Class68_Sub20_Sub12) Class72_Sub1.aClass82_3270.method1479((long) i, (byte) -76));
        anInt2672++;
        if (class68_sub20_sub12 != null)
            return class68_sub20_sub12;
        byte[] is = Class15.aClass21_249.method338(i, 0, 11);
        class68_sub20_sub12 = new Class68_Sub20_Sub12();
        if (is != null)
            class68_sub20_sub12.method1156(i_13_ ^ 0x4c1b, new Stream(is));
        if (i_13_ != 19482)
            method260(null, 15);
        Class72_Sub1.aClass82_3270.method1471((long) i, (byte) -78, class68_sub20_sub12);
        return class68_sub20_sub12;
    }

    private static final void method263(int i, int i_14_, byte i_15_, int i_16_, int i_17_, int i_18_, int i_19_)
    {
        if (i_15_ == 69)
        {
            if (i_19_ < GroundData.anInt677 || i > NodeCache.anInt1920 || i_14_ < Class35.anInt605 || Class51.anInt2257 < i_18_)
            {
                if (i_17_ == 1)
                    Class68_Sub13_Sub27.method839(i_14_, i_19_, i_16_, i_18_, i, (byte) 91);
                else
                    Class104.method1645(-119, i, i_18_, i_14_, i_17_, i_19_, i_16_);
            } else if (i_17_ == 1)
                Class17.method297(i, i_16_, i_14_, i_19_, i_18_, 38);
            else
                Class78.method1419(i_16_, 16324, i_19_, i, i_18_, i_14_, i_17_);
            anInt2663++;
        }
    }

    final void method245(boolean bool, int i, int i_20_)
    {
        anInt2675++;
        int i_21_ = anInt2671 * i >> 12;
        int i_22_ = anInt2666 * i >> 12;
        int i_23_ = anInt2662 * i_20_ >> 12;
        if (bool != true)
            appletWidth = 80;
        int i_24_ = anInt2665 * i_20_ >> 12;
        method263(i_22_, i_23_, (byte) 69, ((Class13) this).anInt220, ((Class13) this).anInt222, i_24_, i_21_);
    }

    final void method243(int i, int i_25_, int i_26_)
    {
        anInt2669++;
        int i_27_ = anInt2666 * i >> 12;
        if (i_25_ == 23700)
        {
            int i_28_ = i_26_ * anInt2662 >> 12;
            int i_29_ = i * anInt2671 >> 12;
            int i_30_ = i_26_ * anInt2665 >> 12;
            GameApplet.method28(((Class13) this).anInt216, i_30_, ((Class13) this).anInt222, i_27_, 1000, ((Class13) this).anInt220, i_29_, i_28_);
        }
    }

    Class13_Sub3(int i, int i_31_, int i_32_, int i_33_, int i_34_, int i_35_, int i_36_)
    {
        super(i_34_, i_35_, i_36_);
        anInt2665 = i_33_;
        anInt2671 = i;
        anInt2666 = i_32_;
        anInt2662 = i_31_;
    }

    static
    {
        aClass128_2664 = new NodeSubList();
        allocatedTinyBufferCount = 0;
    }
}
